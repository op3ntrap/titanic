# print(training_data)
# x_train, y_train = training_data.drop(['Survived'],) , training_data['Survived']

# data = pd.read_csv
# with open('data/Kaggle/titanic/train.csv', 'r') as data_src:
# 	data_headers = data_src.readline()
# print(data_headers)
# Columns are "PassengerId","Survived","Pclass","Name","Sex","Age","SibSp","Parch","Ticket","Fare","Cabin","Embarked"
# train_for_age(x, y)
# null_x = x.isna()
# for c in null_x.columns:
# 	null_x[c] = null_x[c].map(lambda i: int(i))
# # 	print(c, null_x[c].sum())
#
# null_x.Embarked = null_x.Embarked.map(lambda i: int(i))
# print(null_x.Embarked.sum())
# null_x: pd.DataFrame = trainer.isna().copy()
# print(null_x.keys())
# for val in null_x.keys():                                                                                      \
# 	tmp_ = null_x.loc
# print(trainer.Embarked.dtype)
# print(trainer.info())
# x = OrdinalEncoder()
# embarkings = trainer.Embarked.copy()
# embarkings = np.array(embarkings)
# result = x.fit_transform(embarkings.reshape(-1,1))
# print(result)
# from sklearn.ensemble import b
x_train = joblib.load('C:/Users/risan/PycharmProjects/scientificProject/outputs/train_age')
# # print(x_train[0:10])
# x_test = joblib.load('C:/Users/risan/PycharmProjects/scientificProject/outputs/x_test')
# y_train = joblib.load('C:/Users/risan/PycharmProjects/scientificProject/outputs/y_train')
# clf = joblib.load('C:/Users/risan/PycharmProjects/scientificProject/outputs/age__classifier')
# y_test = joblib.load('C:/Users/risan/PycharmProjects/scientificProject/outputs/y_test')
# y_train_pred = clf.predict(x_train)
# y_test_pred = clf.predict(x_test)
# print('precision_score from training: ', precision_score(y_train, y_train_pred, zero_division=1, average='weighted'))
# print('precision_score from test set', precision_score(y_test, y_test_pred, zero_division=1, average='weighted'))
# l1 = precision_score(y_train, y_train_pred, zero_division=1, average='weighted')
# l2 = precision_score(y_test, y_test_pred, zero_division=1, average='weighted')
# with open('C:/Users/risan/PycharmProjects/scientificProject/outputs/precision_log.csv', 'a') as logging:
#     logging.write(str(l1) + ',' + str(l2) + '\n')
